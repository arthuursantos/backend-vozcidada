openapi: 3.0.3
info:
  title: Voz Cidadã API
  description: API para o sistema Voz Cidadã
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Servidor de desenvolvimento local

tags:
  - name: Autenticação
    description: Operações relacionadas à autenticação de usuários
  - name: Funcionário
    description: Operações relacionadas a funcionários
  - name: Chamado
    description: Operações relacionadas a chamados
  - name: Upload de imagens
    description: Operações relacionadas ao upload de imagens para chamados
  - name: Histórico
    description: Operações relacionadas ao histórico de atualizações dos chamados
  - name: Avaliação
    description: Operações relacionadas a avaliações dos chamados
  - name: Notificação
    description: Operações relacionadas a notificações Firebase

paths:
  # Authentication endpoints
  /auth/login:
    post:
      tags:
        - Autenticação
      summary: Autenticar usuário
      description: Autenticação de usuário com email e senha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationDTO'
      responses:
        '200':
          description: Autenticação bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '400':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
  
  /auth/oauth/google:
    post:
      tags:
        - Autenticação
      summary: Login com Google
      description: Autenticação de usuário usando conta Google
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleEmailDTO'
      responses:
        '200':
          description: Autenticação bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '400':
          description: Falha na autenticação com Google
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
  
  /auth/register:
    post:
      tags:
        - Autenticação
      summary: Registrar novo usuário
      description: Registro de um novo usuário comum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
      responses:
        '200':
          description: Usuário registrado com sucesso
        '400':
          description: Erro no registro (ex. email já existe)
  
  /auth/register/admin:
    post:
      tags:
        - Autenticação
      summary: Registrar novo administrador
      description: Registro de um novo usuário com privilégios de administrador
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
      responses:
        '200':
          description: Administrador registrado com sucesso
        '400':
          description: Erro no registro (ex. email já existe)
        '403':
          description: Sem permissão para criar administrador
  
  /auth/changePassword:
    patch:
      tags:
        - Autenticação
      summary: Alterar senha
      description: Altera a senha do usuário autenticado
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDTO'
      responses:
        '200':
          description: Senha alterada com sucesso
        '400':
          description: Erro na alteração de senha
        '401':
          description: Token inválido ou senha atual incorreta
  
  /auth/updateAuthStatus:
    patch:
      tags:
        - Autenticação
      summary: Atualizar status de autenticação
      description: Atualiza o status de autenticação do usuário
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Status atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '401':
          description: Token inválido ou expirado
  
  # Usuario endpoints
  /api/usuario:
    post:
      tags:
        - Usuário
      summary: Criar perfil de usuário
      description: Cria um novo perfil de usuário
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioDTO'
      responses:
        '201':
          description: Perfil de usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
    get:
      tags:
        - Usuário
      summary: Listar todos os usuários
      description: Retorna uma lista paginada de usuários (apenas para administradores)
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de usuários recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/UsuarioDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
  
  /api/usuario/{id}:
    get:
      tags:
        - Usuário
      summary: Buscar usuário por ID
      description: Retorna os detalhes de um usuário específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Usuário encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioDTO'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar este usuário
        '404':
          description: Usuário não encontrado
    put:
      tags:
        - Usuário
      summary: Atualizar usuário
      description: Atualiza os dados de um usuário existente
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioDTO'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para atualizar este usuário
        '404':
          description: Usuário não encontrado
    delete:
      tags:
        - Usuário
      summary: Excluir usuário
      description: Exclui um usuário específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Usuário excluído com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para excluir este usuário
        '404':
          description: Usuário não encontrado
  
  /api/usuario/auth/{authUserId}:
    get:
      tags:
        - Usuário
      summary: Buscar usuário por ID de usuário autenticado
      description: Retorna os detalhes do usuário associado ao ID de usuário autenticado
      security:
        - bearerAuth: [ ]
      parameters:
        - name: authUserId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Usuário encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioDTO'
        '401':
          description: Não autenticado
        '404':
          description: Usuário não encontrado
  
  # Funcionario endpoints
  /api/funcionario:
    get:
      tags:
        - Funcionário
      summary: Listar todos os funcionários
      description: Retorna uma lista paginada de funcionários (apenas para owners)
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de funcionários recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/FuncionarioDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
    post:
      tags:
        - Funcionário
      summary: Criar perfil de administrador
      description: Cria um novo perfil de administrador (apenas para owners)
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuncionarioDTO'
      responses:
        '201':
          description: Perfil de administrador criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para criar administrador
  
  /api/funcionario/{id}:
    get:
      tags:
        - Funcionário
      summary: Buscar funcionário por ID
      description: Retorna os detalhes de um funcionário específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Funcionário encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioDTO'
        '401':
          description: Não autenticado
        '404':
          description: Funcionário não encontrado
    delete:
      tags:
        - Funcionário
      summary: Excluir funcionário
      description: Exclui um funcionário específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Funcionário excluído com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para excluir este funcionário
        '404':
          description: Funcionário não encontrado
  
  /api/funcionario/auth/{authUserId}:
    get:
      tags:
        - Funcionário
      summary: Buscar funcionário por ID de usuário autenticado
      description: Retorna os detalhes do funcionário associado ao ID de usuário autenticado
      security:
        - bearerAuth: [ ]
      parameters:
        - name: authUserId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Funcionário encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioDTO'
        '401':
          description: Não autenticado
        '404':
          description: Funcionário não encontrado
  
  # Chamado endpoints
  /api/chamado:
    get:
      tags:
        - Chamado
      summary: Listar todos os chamados
      description: Retorna uma lista paginada de todos os chamados
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de chamados recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChamadoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
    post:
      tags:
        - Chamado
      summary: Criar um novo chamado
      description: Cria um novo chamado com os dados fornecidos
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChamadoDTO'
      responses:
        '201':
          description: Chamado criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
  
  /api/chamado/{id}:
    get:
      tags:
        - Chamado
      summary: Buscar chamado por ID
      description: Retorna os detalhes de um chamado específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Chamado encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoDTO'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
        '404':
          description: Chamado não encontrado
    put:
      tags:
        - Chamado
      summary: Atualizar um chamado existente
      description: Atualiza os dados de um chamado existente (apenas para administradores)
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChamadoDTO'
      responses:
        '200':
          description: Chamado atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para atualizar este chamado
        '404':
          description: Chamado não encontrado
    delete:
      tags:
        - Chamado
      summary: Excluir um chamado
      description: Exclui um chamado específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Chamado excluído com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para excluir este chamado
        '404':
          description: Chamado não encontrado
  
  /api/chamado/user/{userId}:
    get:
      tags:
        - Chamado
      summary: Listar chamados por ID de usuário
      description: Retorna uma lista paginada de chamados criados por um usuário específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de chamados do usuário recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChamadoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar chamados de outro usuário
        '404':
          description: Usuário não encontrado
  
  /api/chamado/secretaria/{secretaria}:
    get:
      tags:
        - Chamado
      summary: Listar chamados por secretaria
      description: Retorna uma lista paginada de chamados designados a uma secretaria específica
      security:
        - bearerAuth: [ ]
      parameters:
        - name: secretaria
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de chamados da secretaria recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChamadoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar chamados desta secretaria

  /api/chamado/count/{secretaria}:
    get:
      tags:
        - Chamado
      summary: Contar chamados por secretaria
      description: Retorna uma lista de contagens de chamados agrupadas por status para uma secretaria específica.
      parameters:
        - name: secretaria
          in: path
          required: true
          schema:
            type: string
          description: O nome da secretaria para filtrar a contagem.
      responses:
        '200':
          description: Contagem de chamados por secretaria recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                      description:
                        O status do chamado (ex: PENDENTE, EM_ANDAMENTO, CONCLUÍDO).
                    count:
                      type: integer
                      format: int64
                      description: O número de chamados com aquele status.
        '400':
          description: Parâmetro 'secretaria' inválido.
        '404':
          description: Secretaria não encontrada ou sem chamados.
  
  # Upload endpoints
  /api/upload/{filename}:
    get:
      tags:
        - Upload de imagens
      summary: Recuperar imagem de chamado
      description: Retorna a imagem associada a um chamado pelo nome do arquivo
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
          description: Nome do arquivo da imagem
      responses:
        '200':
          description: Imagem recuperada com sucesso
          content:
            image/*:
              schema:
                type: string
                format: binary
        '404':
          description: Imagem não encontrada
        '500':
          description: Erro interno ao recuperar a imagem
  
  /api/upload/file:
    post:
      tags:
        - Upload de imagens
      summary: Fazer upload de imagem
      description: Faz upload de uma imagem para ser associada a um chamado
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: O arquivo de imagem a ser enviado.
      responses:
        '200':
          description: Imagem salva com sucesso. Retorna a URL da imagem.
          content:
            text/plain:
              schema:
                type: string
                description: URL da imagem salva
        '400':
          description: Falha ao salvar a imagem
        '500':
          description: Erro interno ao salvar a imagem
  
  
  # Historico endpoints
  /api/historico:
    get:
      tags:
        - Histórico
      summary: Listar todos os históricos
      description: Retorna uma lista paginada de todos os registros históricos
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de históricos recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/HistoricoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
    post:
      tags:
        - Histórico
      summary: Criar um novo registro histórico
      description: Cria um novo registro histórico com os dados fornecidos
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoricoDTO'
      responses:
        '201':
          description: Registro histórico criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricoDTO'
          headers:
            Location:
              description: URL do registro histórico criado
              schema:
                type: string
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para criar registro histórico
  
  /api/historico/{id}:
    get:
      tags:
        - Histórico
      summary: Buscar histórico por ID
      description: Retorna os detalhes de um registro histórico específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Registro histórico encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricoDTO'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
        '404':
          description: Registro histórico não encontrado
    put:
      tags:
        - Histórico
      summary: Atualizar um registro histórico existente
      description: Atualiza os dados de um registro histórico existente
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoricoDTO'
      responses:
        '200':
          description: Registro histórico atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricoDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para atualizar este registro
        '404':
          description: Registro histórico não encontrado
    delete:
      tags:
        - Histórico
      summary: Excluir um registro histórico
      description: Exclui um registro histórico específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Registro histórico excluído com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para excluir este registro
        '404':
          description: Registro histórico não encontrado
  
  # Avaliacao endpoints
  /api/avaliacao:
    post:
      tags:
        - Avaliação
      summary: Criar uma nova avaliação
      description: Cria uma nova avaliação com os dados fornecidos
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvaliacaoDTO'
      responses:
        '201':
          description: Avaliação criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvaliacaoDTO'
          headers:
            Location:
              description: URL da avaliação criada
              schema:
                type: string
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para criar avaliação
    get:
      tags:
        - Avaliação
      summary: Listar todas as avaliações
      description: Retorna uma lista paginada de todas as avaliações
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de avaliações recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/AvaliacaoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
  
  /api/avaliacao/{id}:
    get:
      tags:
        - Avaliação
      summary: Buscar avaliação por ID
      description: Retorna os detalhes de uma avaliação específica
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Avaliação encontrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvaliacaoDTO'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
        '404':
          description: Avaliação não encontrada
    put:
      tags:
        - Avaliação
      summary: Atualizar uma avaliação existente
      description: Atualiza os dados de uma avaliação existente
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvaliacaoDTO'
      responses:
        '200':
          description: Avaliação atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvaliacaoDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para atualizar esta avaliação
        '404':
          description: Avaliação não encontrada
    delete:
      tags:
        - Avaliação
      summary: Excluir uma avaliação
      description: Exclui uma avaliação específica
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Avaliação excluída com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para excluir esta avaliação
        '404':
          description: Avaliação não encontrada
  /notification/setToken:
    post:
      tags:
        - Notificação
      summary: Definir token FCM
      description: Define o token FCM para um usuário autenticado
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              description: Token FCM do dispositivo
              example: "dQw4w9WgXcQ:APA91bH..."
      responses:
        '200':
          description: Token definido com sucesso
        '401':
          description: Não autenticado
        '500':
          description: Erro ao salvar o token

  /notification/sendToUser:
    post:
      tags:
        - Notificação
      summary: Enviar notificação para usuário
      description: Envia uma notificação push para um usuário específico
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authUserId:
                  type: string
                  description: ID do usuário autenticado
                title:
                  type: string
                  description: Título da notificação
                message:
                  type: string
                  description: Corpo da mensagem
              required:
                - title
                - message
                - authUserId
      responses:
        '200':
          description: Notificação enviada com sucesso
          content:
            text/plain:
              schema:
                type: string
                description: ID da mensagem enviada
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '500':
          description: Erro ao enviar notificação
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  parameters:
    pageSizeParam:
      name: size
      in: query
      description: Número de itens por página
      schema:
        type: integer
        default: 10
    pageNumberParam:
      name: page
      in: query
      description: Número da página (começando em 0)
      schema:
        type: integer
        default: 0
    sortParam:
      name: sort
      in: query
      description: Ordenação (ex. campo,asc ou campo,desc)
      schema:
        type: string
  
  schemas:
    # Authentication DTOs
    AuthenticationDTO:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: Email ou nome de usuário
        password:
          type: string
          description: Senha do usuário
          format: password

    ChangePasswordDTO:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          description: Senha atual
          format: password
        newPassword:
          type: string
          description: Nova senha
          format: password

    GoogleEmailDTO:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: Email da conta Google
          format: email

    LoginResponseDTO:
      type: object
      properties:
        accessToken:
          type: string
          description: Token de acesso JWT
        refreshToken:
          type: string
          description: Token de atualização JWT

    RegisterDTO:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: Email ou nome de usuário
        password:
          type: string
          description: Senha do usuário
          format: password

    # Avaliacao DTO
    AvaliacaoDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        chamadoId:
          type: integer
          format: int64
          description: ID do chamado associado à avaliação
        usuarioId:
          type: integer
          format: int64
          description: ID do usuário que criou a avaliação
        estrelas:
          type: integer
          description: Nota da avaliação em estrelas (1-5)
          minimum: 1
          maximum: 5
        comentario:
          type: string
          description: Comentário sobre a avaliação
          nullable: true
        dataAvaliacao:
          type: string
          format: date-time
          description: Data e hora da avaliação no formato 'yyyy-MM-dd HH:mm:ss'
          example: "2023-12-31 23:59:59"
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    # Chamado DTO
    ChamadoDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        usuarioId:
          type: integer
          format: int64
          description: ID do usuário que criou o chamado
        usuarioNome:
          type: string
          description: Nome do usuário que criou o chamado
        titulo:
          type: string
          description: Título do chamado
        descricao:
          type: string
          description: Descrição detalhada do chamado
        dataAbertura:
          type: string
          format: date-time
          description: Data e hora de abertura do chamado no formato 'yyyy-MM-dd HH:mm:ss'
          example: "2023-12-31 23:59:59"
        status:
          type: string
          description: Status atual do chamado
        fotoAntesFile:
          type: string
          format: binary
          description: Arquivo de imagem antes da resolução (usado apenas no upload)
        fotoAntesUrl:
          type: string
          description: URL da imagem antes da resolução
        fotoDepoisUrl:
          type: string
          description: URL da imagem depois da resolução
        secretaria:
          type: string
          description: Secretaria responsável pelo chamado
        latitude:
          type: number
          format: decimal
          description: Latitude da localização do chamado
        longitude:
          type: number
          format: decimal
          description: Longitude da localização do chamado
        avaliacao:
          $ref: '#/components/schemas/AvaliacaoDTO'
        historicos:
          type: array
          items:
            $ref: '#/components/schemas/HistoricoDTO'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    # Funcionario DTO
    FuncionarioDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        authId:
          type: integer
          format: int64
          description: ID do usuário de autenticação associado
        cpf:
          type: string
          description: CPF do funcionário
        cargo:
          type: string
          description: Cargo do funcionário
        secretaria:
          $ref: '#/components/schemas/Secretaria'
        dataCadastro:
          type: string
          format: date-time
          description: Data e hora de cadastro no formato 'yyyy-MM-dd HH:mm:ss'
          example: "2023-12-31 23:59:59"
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    # Historico DTO
    HistoricoDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        chamadoId:
          type: integer
          format: int64
          description: ID do chamado associado ao histórico
        funcionarioId:
          type: integer
          format: int64
          description: ID do funcionário que realizou a modificação
        dataModificacao:
          type: string
          format: date-time
          description: Data e hora da modificação no formato 'yyyy-MM-dd HH:mm:ss'
          example: "2023-12-31 23:59:59"
        statusAnterior:
          type: string
          description: Status anterior do chamado
        statusNovo:
          type: string
          description: Novo status do chamado
        observacao:
          type: string
          description: Observações sobre a modificação
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    # Usuario DTO
    UsuarioDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
          description: Nome completo do usuário
        cpf:
          type: string
          description: CPF do usuário
        dataNascimento:
          type: string
          format: date
          description: Data de nascimento no formato 'yyyy-MM-dd'
          example: "1990-12-31"
        dataCadastro:
          type: string
          format: date-time
          description: Data e hora de cadastro no formato 'yyyy-MM-dd HH:mm:ss'
          example: "2023-12-31 23:59:59"
        cep:
          type: string
          description: CEP do endereço
        rua:
          type: string
          description: Nome da rua
        bairro:
          type: string
          description: Nome do bairro
        cidade:
          type: string
          description: Nome da cidade
        uf:
          type: string
          description: Unidade federativa (estado)
          maxLength: 2
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    # Enums e tipos auxiliares
    UserRole:
      type: string
      enum:
        - OWNER
        - ADMIN
        - USER
      description: Papel do usuário no sistema

    AuthStatus:
      type: string
      enum:
        - SIGNIN
        - SIGNUP
      description: Status de autenticação do usuário

    Secretaria:
      type: string
      enum:
        - OBRAS
        - URBANISMO
      description: Secretarias disponíveis no sistema

    # Utility schemas
    StandardError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Timestamp do momento em que o erro ocorreu (formato ISO 8601)
          example: "2023-12-31T23:59:59.999Z"
        status:
          type: integer
          description: Código de status HTTP
          example: 400
        message:
          type: string
          description: Mensagem descritiva do erro
          example: "Dados de entrada inválidos"
        path:
          type: string
          description: Caminho da requisição que gerou o erro
          example: "/api/chamado"

    PageInfo:
      type: object
      properties:
        size:
          type: integer
          description: Número de elementos por página
        totalElements:
          type: integer
          description: Número total de elementos
        totalPages:
          type: integer
          description: Número total de páginas
        number:
          type: integer
          description: Página atual (começando em 0)

    Link:
      type: object
      properties:
        rel:
          type: string
          description: Relação do link
        href:
          type: string
          description: URL do link